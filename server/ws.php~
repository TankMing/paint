<?php

Class WS {
var $master;
var $socket = array();
var $handshake = false;

function __construct($address, $port) {
	$this->master = socket_create(AF_INET, SOCK_STREAM, SOL_TCP)
		or die("socket_create() failed");
	socket_set_option($this->master, SOL_SOCKET, SO_REUSEADDR, 1)
		or die("socket_option() failed");
	socket_bind($this->master, $address, $port)
		or die("socket_bind() failed");
	socket_listen($this->master, 2)
		or die("socket_listen() failed");

	$this->sockets[] = $this->master;

	echo("Master socket : ".$this->master."\n");

	while(true) {
		$write = NULL;
		$except = NULL;
		socket_select($this->sockets, $write, $except, NULL);

		foreach($this->sockets as $socket) {
			if($socket ==  $this->master) {
				$client = socket_accept($this->master);
				if($client < 0) {
					echo "socket_accept() failed";
					continue;
				} else {
					array_push($this->sockets, $client);
					echo "connect client\n";
				}
			} else {
				$bytes = @socket_recv($socket, $buffer, 2048, 0);
				echo $buffer."\n";
				if($bytes == 0) return;
				if (!$this->handshake) {
					$this->doHandShake($socket, $buffer);
					echo "shakeHands\n";
				} else {
					echo $buffer;
					//$buffer = decode($buffer);
					echo "send file\n";
				}
			}
		}
	}
}
function getKey($req) {
	$key = null;
	if (preg_match("/Sec-WebSocket-Key: (.*)\r\n/", $req, $match)) {
		$key = $match[1];
	}
	echo $key."\n";
	return $key;
}
function encry($req) {
	$key = $this->getKey($req);
	$mask = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";

	return base64_encode(sha1($key . $mask, true));
}
function doHandShake($socket, $req) {
	$acceptKey = $this->encry($req);
	$upgrade = "HTTP/1.1 101 Switching Protocols\r\n".
				"Upgrade: webSocket\r\n".
				"Connection: Upgrade\r\n".
				"Sec-WebSocket-Accept: " . $acceptKey . "\r\n".
				"\r\n";

	socket_write($socket, $upgrade.chr(0), strlen($upgrade.chr(0)));
	$this->handshake = true;
}
}
$ws = new WS('localhost', 4000);
